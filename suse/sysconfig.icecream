#
## Type: integer(0:19)
## Path: Applications/icecream
## Description: Icecream settings
## ServiceRestart: icecream
## Default: 5
#
# Nice level of running compilers
#
ICECREAM_NICE_LEVEL="5"

#
## Type: string
## Path: Applications/icecream
## Default: /var/log/icecream/iceccd
#
# icecream daemon log file
#
ICECREAM_LOG_FILE="/var/log/icecream/iceccd"

#
## Type: string
## Path: Applications/icecream
## Default: no
#
# Start also the scheduler?
#
ICECREAM_RUN_SCHEDULER="no"

#
## Type: string
## Path: Applications/icecream
## Default: /var/log/icecream/scheduler
#
# icecream scheduler log file
#
ICECREAM_SCHEDULER_LOG_FILE="/var/log/icecream/scheduler"

#
## Type: string
## Path: Applications/icecream
## Default: ""
#
# Identification for the network the scheduler and daemon run on. 
# You can have several distinct icecream networks in the same LAN
# for whatever reason.
#
ICECREAM_NETNAME=""

#
## Type: string
## Path: Applications/icecream
## Default: ""
#
# If the daemon can't find the scheduler by broadcast (e.g. because 
# of a firewall) you can specify it.
#
ICECREAM_SCHEDULER_HOST=""

#
## Type: integer
## Path: Applications/icecream
## Default: ""
# 
# You can overwrite here the number of jobs to run in parallel. Per
# default this depends on the number of (virtual) CPUs installed. 
#
# Note: a value of "0" is actually interpreted as "1", however it
# also sets ICECREAM_ALLOW_REMOTE="no".
#
ICECREAM_MAX_JOBS=""

#
## Type: yesno
## Path: Applications/icecream
## Default: "yes"
# 
# Specifies whether jobs submitted by other nodes are allowed to run on
# this one.
#
ICECREAM_ALLOW_REMOTE="yes"

#
## Type: string
## Path: Applications/icecream
## Default: "/var/cache/icecream"
#
# This is the directory where the icecream daemon stores the environments
# it compiles in. In a big network this can grow quite a bit, so use some
# path if your /tmp is small - but the user icecream has to write to it.
# 
ICECREAM_BASEDIR="/var/cache/icecream"
