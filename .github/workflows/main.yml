# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  autotools-Linux:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt install autoconf automake libcap-ng-dev libzstd-dev libarchive-dev liblzo2-dev ccache asciidoc expect libarchive13 ccache

      - name: Configure(autotools)
        run: |
          cd $GITHUB_WORKSPACE
          ./autogen.sh
          ./configure --prefix=/tmp

      - name: Build(autotools)
        run: |
          cd $GITHUB_WORKSPACE
          make -j$(nproc)

      - name: Test(tests taken from original project)
        run: |
          cd $GITHUB_WORKSPACE
          make test -j$(nproc)
  cmake-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt install libcap-ng-dev libzstd-dev libarchive-dev liblzo2-dev ccache asciidoc expect cmake ninja-build libarchive13 ccache

      - name: Configure(cmake)
        run: |
          cd $GITHUB_WORKSPACE
          cmake -GNinja

      - name: Build(cmake)
        run: ninja

  autotools-macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install lzo asciidoc docbook-xsl gdb ccache libarchive expect telnet util-linux gnu-getopt ninja

      - name: Configure(autotools)
        run: |
          cd $GITHUB_WORKSPACE
          ./autogen.sh
          ./configure --prefix=/tmp

      - name: Build(autotools)
        run: |
          cd $GITHUB_WORKSPACE
          make -j$(nproc)

      - name: Test(tests taken from original project)
        run: |
          cd $GITHUB_WORKSPACE
          make test -j$(nproc)

  cmake-macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install lzo asciidoc docbook-xsl gdb ccache libarchive expect telnet util-linux gnu-getopt ninja

      - name: Configure(cmake)
        run : |
          cd $GITHUB_WORKSPACE
          cmake -GNinja

      - name: Build(cmake)
        run: ninja
